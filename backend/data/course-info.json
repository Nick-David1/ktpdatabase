{
    "course_list": {
        "CASCS101": {
            "id": "CS101",
            "name": "Introduction to Computing",
            "prof": [],
            "prereqs": "",
            "reviews": [],
            "content": "The computer is presented as a tool that can assist in solving a broad spectrum of problems. This course provides a general introduction designed to dispel the mystery surrounding computers and introduces the fundamental ideas of programs and algorithms."
        },
        "CASCS103": {
            "id": "CS103",
            "name": "Introduction to Internet Technologies and Web Programming",
            "prof": [""],
            "prereqs": "",
            "reviews": [],
            "content": "Introduction to the basic architecture and protocols underlying the operation of the Internet with an emphasis on Web design, Web application programming, and algorithmic thinking. General familiarity with the Internet is assumed."
        },

        "CASCS105": {
            "id": "CS105",
            "name": "Introduction to Databases and Data Mining",
            "prof": [],
            "prereqs": "",
            "reviews": [],
            "content": "General introduction to computational methods for processing collection of data. Topics include databases and data modeling; writing simple programs to process data; data mining and data visualization. Applications are drawn from business, the arts, the life sciences, and social sciences."
        },

        "CASCS108": {
            "id": "CS108",
            "name": "Programming for Non-CS Majors",
            "prof": [],
            "prereqs": "",
            "reviews": [],
            "content": "A rigorous introduction to programming for students not majoring in computer science. Covers a broad set of topics about application development, including basic programming concepts, testing and debugging, abstraction and design, and an introduction to data analytics."
        },

        "CASCS111": {
            "id": "CS111",
            "name": "Introduction to Computer Science 1",
            "prof": [],
            "prereqs": "",
            "reviews": [],
            "content": "The first course for computer science majors and anyone seeking a rigorous introduction. Develops computational problem-solving skills by programming in the Python language, and exposes students to variety of other topics from computer science and its applications."
        },

        "CASCS112": {
            "id": "CS112",
            "name": "Intro to Computer Science 2",
            "prof": ["Papadakis", "De Oliveira"],
            "prereqs": "CS111; or equivalent",
            "reviews": [],
            "content": "Covers advanced programming techniques and data structures. Topics include recursion, algorithm analysis, linked lists, stacks, queues, trees, graphs, tables, searching, and sorting. Carries MCS divisional credit in CAS."
        },

        "CASCS131": {
            "id": "CS131",
            "name": "Combinatoric Structures",
            "prof": [],
            "prereqs": "",
            "reviews": [],
            "content": "Representation, analysis, techniques, and principles for manipulation of basic combinatoric structures used in computer science. Rigorous reasoning is emphasized."
        },

        "CASCS132": {
            "id": "CS132",
            "name": "Geometric Algorithms",
            "prof": [],
            "prereqs": "CS111 and MA123",
            "reviews": [],
            "content": "Basic concepts, data structures, and algorithms for geometric objects. Examples of topics: Cartesian geometry, transformations and their representation, queries and sampling, triangulations. Emphasis on rigorous reasoning and analysis, advancing algorithmic maturity and expertise in its application."
        },

        "CASCS210": {
            "id": "CS210",
            "name": "Computer Systems",
            "prof": [],
            "prereqs": "CS112",
            "reviews": [],
            "content": "Fundamental concepts of computer systems and systems programming. Hardware fundamentals including digital logic, memory systems, processor design, buses, I/O subsystems, data representations, computer arithmetic, and instruction- set architecture. Software concepts including assembly language programming, operating systems, assemblers, linkers, and systems programming in C."
        },

        "CASCS235": {
            "id": "CS235",
            "name": "Algebraic Algorithms",
            "prof": [],
            "prereqs": "CS112",
            "reviews": [],
            "content": "Fundamental concepts of computer systems and systems programming. Hardware fundamentals including digital logic, memory systems, processor design, buses, I/O subsystems, data representations, computer arithmetic, and instruction- set architecture. Software concepts including assembly language programming, operating systems, assemblers, linkers, and systems programming in C."
        },

        "CASCS237": {
            "id": "CS237",
            "name": "Probability in Computing",
            "prof": [],
            "prereqs": "CS131",
            "reviews": [],
            "content": "Introduction to basic probabilistic concepts and methods used in computer science. Develops an understanding of the crucial role played by randomness in computing, both as a powerful tool and as a challenge to confront and analyze. Emphasis on rigorous reasoning, analysis, and algorithmic thinking."
        },

        "CASCS320": {
            "id": "CS320",
            "name": "Concepts of Programming Languages",
            "prof": [],
            "prereqs": "CS131 and CS210",
            "reviews": [],
            "content": "Concepts involved in the design of programming languages. Bindings, argument transmission, and control structures. Environments: compile-time, load-time, and run-time. Interpreters."
        },

        "CASCS330": {
            "id": "CS330",
            "name": "Introduction to Analysis of Algorithms",
            "prof": [],
            "prereqs": "CS112, CS131, and CS132; or CS235 or CS237",
            "reviews": [],
            "content": "Examines the basic principles of algorithm design and analysis; graph algorithms; greedy algorithms; dynamic programming; network flows; polynomial- time reductions; NP-hard and NP-complete problems; approximation algorithms; randomized algorithms."
        },

        "CASCS332": {
            "id": "CS332",
            "name": "Elements of the Theory of Computation",
            "prof": [],
            "prereqs": "CS330",
            "reviews": [],
            "content": "The basic concepts of the theory of computation are studied. Topics include models of computation, polynomial time, Church's thesis; universal algorithms, undecidability and intractability; time and space complexity, nondeterminism, probabilistic computation and reductions of computational problems."
        },

        "CASCS350": {
            "id": "CS350",
            "name": "Fundamentals of Computing Systems",
            "prof": [],
            "prereqs": "CS210",
            "reviews": [],
            "content": "Programming-centric introduction to computer systems. The course discusses system design principles, performance analysis, communication and synchronization primitives, concurrency control, database transactions, data consistency, task and data parallelism, replication, fault tolerance, and distributed consensus. Part of the discussion includes case studies of real systems from industry. All programming assignments will be in Go."
        },

        "CASCS357": {
            "id": "CS357",
            "name": "Introduction to Information Security",
            "prof": [],
            "prereqs": "CS210; or consent of instructor",
            "reviews": [],
            "content": "Provides basic concepts needed for understanding information security. Discusses vulnerabilities, design principles, basic algorithms, security definitions, and analytical methods. Covers system security, network security, web security, cryptography, and data privacy. Also addresses social, ethical, and policy aspects of security."
        },

        "CASCS365": {
            "id": "CS365",
            "name": "Foundations of Data Science",
            "prof": [],
            "prereqs": "CS112 and CS131 and CS132 and CS237 (or equivalent). Or consent of instructor",
            "reviews": [],
            "content": "Lays the foundation towards more advanced data-intensive classes, such as Data Science, Machine Learning, Data Mining. The course provides an understanding of the fundamentals and the practical implications of concepts. It covers both theoretical skills as well as working/practical knowledge."
        },

        "CASCS410": {
            "id": "CS410",
            "name": "Advanced Software Systems",
            "prof": [],
            "prereqs": "CS210",
            "reviews": [],
            "content": "Systems programming including such topics as project management, tools, I/O networking, multiprocessing, exception handling, and system services. Other topics are explored using C and Perl under the UNIX operating system. Requires a working knowledge of the C programming language and experience with UNIX as a user, or equivalent."
        },

        "CASCS411": {
            "id": "CS411",
            "name": "Software Engineering",
            "prof": [],
            "prereqs": "CS112",
            "reviews": [],
            "content": "Introduction to the construction of reliable software. Topics may include software tools, software testing methodologies, retrofitting, regression testing, structured design and structured programming, software characteristics and quality, complexity, entropy, deadlock, fault tolerance, formal proofs of program correctness, chief program teams, and structured walk-throughs."
        },

        "CASCS412": {
            "id": "CS412",
            "name": "Full-Stack Application Design and Development",
            "prof": [],
            "prereqs": "CS111; CS112; CS411; or consent of instructor",
            "reviews": [],
            "content": "Introduction to design and development of full-stack web applications. Topics include asynchronous programming; non-relational data stores; use of APIs; serverless (cloudbased) applications; decoupled client/server architectures; performance; testing; packaging; and deployment. Examines current and proposed technology stacks."
        },

        "CASCS440": {
            "id": "CS440",
            "name": "Introduction to Artificial Intelligence",
            "prof": [],
            "prereqs": "CS112 and CS132",
            "reviews": [],
            "content": "Introduction to computer systems that exhibit intelligent behavior, in particular, perceptual and robotic systems. Topics include human computer interfaces, computer vision, robotics, game playing, pattern recognition, knowledge representation, planning."
        },

        "CASCS451": {
            "id": "CS451",
            "name": "Distributed Systems",
            "prof": [],
            "prereqs": "CS210",
            "reviews": [],
            "content": "Programming-centric introduction to how networks of computers are structured to operate as coherent single systems. Introducing principles of architecture, processes, communications, naming, synchronization, consistency and replication, fault tolerance and security, and paradigms such as web-based, object-based, file system, and consistency-based."
        },

        "CASCS454": {
            "id": "CS454",
            "name": "Embedded Systems Development",
            "prof": [],
            "prereqs": "CS210",
            "reviews": [],
            "content": "Lab-based course exploring concepts, techniques, best practices, and tools for the development of connected embedded systems, including: signal processing; sensing, control and actuation; programming and debugging on microprocessors; 1/0 interfacing and development of device drivers; and time-critical data handling."
        },

        "CASCS455": {
            "id": "CS455",
            "name": "Computer Networks",
            "prof": [],
            "prereqs": "CS210",
            "reviews": [],
            "content": "Concepts underlying the design of high-performance computer networks and scalable protocols. Topics include Internet design principles and methodology, TCP/IP implementation, packet switching and routing algorithms, multicast, quality of service considerations, error detection and correction, and performance evaluation."
        },

        "CASCS460": {
            "id": "CS460",
            "name": "Introduction to Database Systems",
            "prof": [],
            "prereqs": "CS112",
            "reviews": [],
            "content": "Introduction to database management systems. Examines entity-relationship, relational, and object-oriented data models; commercial query languages: SQL, relational algebra, relational calculus, and QBE; file organization, indexing and hashing, query optimization, transaction processing, concurrency control and recovery,integrity, and security."
        },

        "CASCS480": {
            "id": "CS480",
            "name": "Introduction to Computer Graphics",
            "prof": [],
            "prereqs": "CS112 and CS132",
            "reviews": [],
            "content": "Introduction to computer graphics algorithms, programming methods, and applications. Focus on fundamentals of two- and three-dimensional raster graphics: scan-conversion, clipping, geometric transformations, and camera modeling. Introduces concepts in computational geometry, computer-human interfaces, animation, and visual realism."
        },

        "CASCS505": {
            "id": "CS505",
            "name": "Introduction to Natural Language Processing",
            "prof": [],
            "prereqs": "CS365",
            "reviews": [],
            "content": "Natural language processing (NLP) is a field of AI which aims to equip computers with the ability to intelligently process natural (human) language. This course explores statistical and machine learning techniques for the automatic analysis of natural language data."
        },

        "CASCS506": {
            "id": "CS506",
            "name": "Data Science Tools and Applications",
            "prof": [],
            "prereqs": "CS108 or CS111; CS132 or MA242 or MA442",
            "reviews": [],
            "content": "Covers practical skills in working with data and introduces a wide range of techniques that are commonly used in the analysis of data, such as clustering, classification, regression, and network analysis. Emphasizes hands-on application of methods via programming."
        },

        "CASCS519": {
            "id": "CS519",
            "name": "Spark! Software Engineering X-Lab Practicum",
            "prof": [],
            "prereqs": "CS411 or DS310; or equiv. experience in software development and consent of instructor",
            "reviews": [],
            "content": "This course offers students in computing disciplines the opportunity to apply their programming and system development skills by working on real-world projects provided from partnering organizations within and outside of BU, which are curated by Spark! The course offers a range of project options where students can improve their technical skills, while also gaining the soft skills necessary to deliver projects aligned to the partner's goals. These include teamwork and communications skills and software development processes."
        },

        "CASCS523": {
            "id": "CS523",
            "name": "Deep Learning",
            "prof": [],
            "prereqs": "CS542",
            "reviews": [],
            "content": "Mathematical and machine learning background for deep learning. Feed-forward networks., Backpropagation. Training strategies for deep networks. Architectures such as convolutional, recurrent, transformer networks. Deep reinforcement learning. Deep unsupervised learning. Exposure to modern programming tools and libraries. Other recent topics, time permitting."
        },

        "CASCS542": {
            "id": "CS542",
            "name": "Principles of Machine Learning",
            "prof": [],
            "prereqs": "CS365",
            "reviews": [],
            "content": "Introduction to modern machine learning concepts, techniques, and algorithms. Topics include regression, kernels, support vector machines, feature selection, boosting, clustering, hidden Markov models, and Bayesian networks. Programming assignments emphasize taking theory into practice, through applications on real-world data sets."
        },

        "CASCS549": {
            "id": "CS549",
            "name": "Spark! Machine Learning X-Lab Practicum",
            "prof": [],
            "prereqs": "CS505 or CS542 or CS585; or consent of instructor",
            "reviews": [],
            "content": "The Spark! Practicum offers students in computing disciplines the opportunity to apply their knowledge in algorithms, inferential analytics, and software development by working on real-world projects provided from partnering organizations within BU and from outside. The course offers a range of project options where students can improve their technical skills, while also gaining the soft skills necessary to deliver projects aligned to the partner's goals. These include teamwork and communications skills and software development processes. All students participating in the course are expected to complete a project focused on an application of inferential analytics or machine learning, including a final presentation to the partner organization."
        },

        "ENGEK131": {
            "id": "EK131",
            "name": "Introduction to Engineering: Hands On",
            "prof": ["Aamar", "Sebesta"],
            "prereqs": "",
            "reviews": [],
            "content": "This course introduces freshmen to a set of design-oriented engineering skills through a hands-on experience using engineering tools (software and hardware) for design and prototyping. Students will be exposed to a number of mechanical and electrical engineering tools applicable to 3D visualization, building structures, designing and wiring circuits, prototyping and instrumentation. Students will work individually and in teams to build substructures that can be integrated into a functional device (final product)."
        },

        "ENGEK103": {
            "id": "EK103",
            "name": "Computational Linear Algebra",
            "prof": ["Semeter", "Zhang"],
            "prereqs": "EK122",
            "reviews": [],
            "content": "Covers advanced programming techniques and data structures. Topics include recursion, algorithm analysis, linked lists, stacks, queues, trees, graphs, tables, searching, and sorting. Carries MCS divisional credit in CAS."
        }
    }
}
